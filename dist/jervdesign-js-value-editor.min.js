/*! jervdesign-js-value-editor 2016-07-11 */

angular.module("JervDesignJsValueEditor",[]);var JervDesignJsValueEditorConfig={schemaConfig:{"field.name":{type:"literal",title:"Field",required:!0,filterValidate:null}},types:{literal:"JervDesignJsValueEditorDataTypeLiteral",string:"JervDesignJsValueEditorDataTypeString",null:"JervDesignJsValueEditorDataTypeNull",number:"JervDesignJsValueEditorDataTypeNumber",object:"JervDesignJsValueEditorDataTypeObject",array:"JervDesignJsValueEditorDataTypeArray",boolean:"JervDesignJsValueEditorDataTypeBoolean"},"type-changer":{description:"Handles changing types",directive:"jervdesign-js-value-editor-type-changer"},distPath:"/vendor/jervdesign-js-value-editor/dist/"};angular.module("JervDesignJsValueEditor").run(["JervDesignJsValueEditorService","JervDesignJsValueEditorDataTypeLiteral","JervDesignJsValueEditorDataTypeString","JervDesignJsValueEditorDataTypeNull","JervDesignJsValueEditorDataTypeNumber","JervDesignJsValueEditorDataTypeObject","JervDesignJsValueEditorDataTypeArray","JervDesignJsValueEditorDataTypeBoolean",function(JervDesignJsValueEditorService,JervDesignJsValueEditorDataTypeLiteral,JervDesignJsValueEditorDataTypeString,JervDesignJsValueEditorDataTypeNull,JervDesignJsValueEditorDataTypeNumber,JervDesignJsValueEditorDataTypeObject,JervDesignJsValueEditorDataTypeArray,JervDesignJsValueEditorDataTypeBoolean){JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeLiteral),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeString),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeNull),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeNumber),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeObject),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeArray),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeBoolean)}]);var JervDesignJsValueEditorEvents=function(){var self=this,listeners={};self.on=function(event,listenerId,method){return listeners[event]||(listeners[event]={}),listeners[event][listenerId]=method,listenerId},self.trigger=function(event,args){if(listeners[event]){var listenerList=listeners[event];for(var key in listenerList)if(listenerList.hasOwnProperty(key)){var value=listenerList[key];"function"==typeof value&&value(args)}}}};angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorEvents",function(){return new JervDesignJsValueEditorEvents});var JervDesignJsValueEditorDataSchema=function(){var self=this;self.type="literal",self.name="",self.value=null,self.displayValue="",self.title=self.name,self.directive=null,self.filterValidate=function(){return new JervDesignJsValueEditorFilterValidateResult},self.addDisplayValue=null};angular.module("JervDesignJsValueEditor").factory("JervDesignJsValueEditorDataSchema",[function(){return JervDesignJsValueEditorDataSchema}]);var JervDesignJsValueEditorFilterDataType=function(){var dataType=this;dataType.type="DEFAULT",dataType.description="DEFAULT",dataType.directive="",dataType.buildSchemaValues=function(name,value,schema){},dataType.createValue=function(key,subValue,schemaValue){},dataType.updateValue=function(key,subValue,schemaValue){},dataType.deleteValue=function(key,schemaValue){},dataType.filterValidate=function(name,value){return new JervDesignJsValueEditorFilterValidateResult}};angular.module("JervDesignJsValueEditor").factory("JervDesignJsValueEditorFilterDataType",[function(){return JervDesignJsValueEditorFilterDataType}]);var JervDesignJsValueEditorFilterValidateResult=function(){var self=this;self.message="OK",self.isValid=!0};angular.module("JervDesignJsValueEditor").factory("JervDesignJsValueEditorFilterValidateResult",function(){return JervDesignJsValueEditorFilterValidateResult}),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeArray",["JervDesignJsValueEditorFilterDataType","JervDesignJsValueEditorService",function(JervDesignJsValueEditorFilterDataType,JervDesignJsValueEditorService){var dataType=new JervDesignJsValueEditorFilterDataType;return dataType.type="array",dataType.description="Handles array",dataType.directive="jerv-design-js-value-editor-field-literal",dataType.buildSchemaValues=function(name,value,schemas){for(var i=0;i<value.length;i++)JervDesignJsValueEditorService.buildDataSchema(name+"."+i,value[i],schemas)},dataType.buildSchemaValues=function(name,value,schema){},dataType.createValue=function(key,subValue,schemaValue){schemaValue.push(subValue)},dataType.updateValue=function(key,subValue,schemaValue){schemaValue[key]=subValue},dataType.deleteValue=function(key,schemaValue){schemaValue.splice(key,1)},dataType}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeBoolean",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var service=new JervDesignJsValueEditorFilterDataType;return service.type="boolean",service.description="Handles booleans",service.directive="jerv-design-js-value-editor-field-boolean",service}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeLiteral",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var service=new JervDesignJsValueEditorFilterDataType;return service.type="literal",service.description="Handles literals as strings",service.directive="jerv-design-js-value-editor-field-literal",service}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeNull",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var service=new JervDesignJsValueEditorFilterDataType;return service.type="null",service.description="Handles nulls",service.directive="jerv-design-js-value-editor-field-literal",service}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeNumber",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var service=new JervDesignJsValueEditorFilterDataType;return service.type="number",service.description="Handles numbers",service.directive="jerv-design-js-value-editor-field-number",service}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeObject",["JervDesignJsValueEditorFilterDataType","JervDesignJsValueEditorService",function(JervDesignJsValueEditorFilterDataType,JervDesignJsValueEditorService){var dataType=new JervDesignJsValueEditorFilterDataType;return dataType.type="object",dataType.description="Handles objects",dataType.directive="jerv-design-js-value-editor-field-literal",dataType.buildSchemaValues=function(name,value,schemas){for(var prop in value)JervDesignJsValueEditorService.buildDataSchema(name+"."+prop,value[prop],schemas)},dataType.createValue=function(key,subValue,schemaValue){schemaValue[key]=subValue},dataType.updateValue=function(key,subValue,schemaValue){schemaValue[key]=subValue},dataType.deleteValue=function(key,schemaValue){delete schemaValue[key]},dataType}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeString",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var service=new JervDesignJsValueEditorFilterDataType;return service.type="string",service.description="Handles strings and nulls",service.directive="jerv-design-js-value-editor-field-string",service}]);var JervDesignJsValueEditorService=function(JervDesignJsValueEditorEvents,JervDesignJsValueEditorDataSchema){var self=this,typeServices={};self.libPath="/bower_components/jervdesign-js-value-editor/dist/",self.schemas={},self.getEvents=function(){return JervDesignJsValueEditorEvents},self.setTypeService=function(dataType){typeServices[dataType.type]&&console.warn("Duplicate type set for "+dataType.type),typeServices[dataType.type]=dataType},self.getTypeService=function(type){if(!typeServices[type])throw"Type not found:"+type;return typeServices[type]},self.getType=function(name,value){var type=self.typeOf(value);return typeServices[type]||(console.warn("Type "+type+" service not available, using literal"),type="literal"),type},self.typeOf=function(value){return null===value?"null":void 0===value?"null":Array.isArray(value)?"array":typeof value},self.getParentSchemaData=function(ns){var schemaName=self.getSchemaName(ns),dataParentNs=self.getParentNs(ns);return console.log(self.schemas[schemaName]),self.schemas[schemaName][dataParentNs]},self.getKey=function(ns){var nsParts=ns.split("."),last=nsParts.length-1;return nsParts[last]},self.getSchemaName=function(ns){var nsParts=ns.split(".");return nsParts[0]},self.getParentNs=function(ns){var nsParts=ns.split("."),last=nsParts.length-1;return nsParts.splice(last,1),nsParts.join(".")},self.getDataNs=function(ns){var nsParts=ns.split(".");return nsParts.splice(0,1),nsParts.join(".")},self.getDataSchema=function(ns){return self.schemas[self.getSchemaName(ns)]},self.createDataSchema=function(ns,value){var schemaName=self.getSchemaName(ns),dataParentNs=self.getParentNs(ns),key=self.getKey(ns),parentType=self.schemas[schemaName].schema[ns].parentType,parentSchemaValue=null;eval("parentSchemaValue = self.schemas."+schemaName+".data."+dataParentNs),typeServices[parentType].createValue(key,value,parentSchemaValue),self.refreshDataSchema(schemaName)},self.updateDataSchema=function(ns,value){var schemaName=self.getSchemaName(ns),dataParentNs=self.getParentNs(ns),key=self.getKey(ns),parentType=self.schemas[schemaName].schema[ns].parentType,parentSchemaValue=null;eval("parentSchemaValue = self.schemas."+schemaName+".data."+dataParentNs),typeServices[parentType].updateValue(key,value,parentSchemaValue),self.refreshDataSchema(schemaName)},self.deleteDataSchema=function(ns){var schemaName=self.getSchemaName(ns),dataParentNs=self.getParentNs(ns),key=self.getKey(ns),parentType=self.schemas[schemaName].schema[ns].parentType,parentSchemaValue=null;eval("parentSchemaValue = self.schemas."+schemaName+".data."+dataParentNs),typeServices[parentType].deleteValue(key,parentSchemaValue),self.refreshDataSchema(schemaName)},self.refreshDataSchema=function(schemaName){self.schemas[schemaName].schema={},self.buildDataSchema(schemaName,self.schemas[schemaName].data,self.schemas[schemaName].schema),JervDesignJsValueEditorEvents.trigger("updateSchema",self.schemas[schemaName])},self.newDataSchema=function(schemaName,data){return self.schemas[schemaName]={},self.schemas[schemaName].data=data,self.schemas[schemaName].schema=self.buildDataSchema(schemaName,data,{}),self.schemas[schemaName]},self.buildDataSchema=function(name,value,schemas){schemas||(schemas={}),name||(name="");var type=self.getType(name,value),parentSchemaData=self.getParentSchemaData(name);console.log(parentSchemaData);var schema=new JervDesignJsValueEditorDataSchema;return schema.type=type,schema.parentType=parentSchemaData.schema.type,schema.name=name,schema.value=value,schema.original=value,schema.displayValue=JSON.stringify(value),schema.directive=typeServices[type].directive,schemas[name]=schema,typeServices[type].buildSchemaValues(name,value,schemas),schemas},self.filterValidate=function(schema){var type=self.getType(name,value);return typeServices[type].filterValidate(name,value)}};angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorService",["JervDesignJsValueEditorEvents","JervDesignJsValueEditorDataSchema",function(JervDesignJsValueEditorEvents,JervDesignJsValueEditorDataSchema){return new JervDesignJsValueEditorService(JervDesignJsValueEditorEvents,JervDesignJsValueEditorDataSchema)}]),angular.module("JervDesignJsValueEditor").directive("jervDesignJsValueEditorStandardDisplay",["$compile","JervDesignJsValueEditorService",function($compile,JervDesignJsValueEditorService){function link($scope,element,attrs){var rootNamespace=attrs.rootNamespace,events=JervDesignJsValueEditorService.getEvents();rootNamespace||(rootNamespace="root"),$scope.valueData||console.error("value-data attribute missing or empty");var schemaData=JervDesignJsValueEditorService.newDataSchema(rootNamespace,$scope.valueData),buildSchema=function(schemaData){$scope.schemas=schemaData.schema;var displayElm=element.find(".scheme-entries");displayElm.empty();var directiveElm,directiveName,directiveValue;for(var ns in $scope.schemas)ns!==rootNamespace&&(directiveName=$scope.schemas[ns].directive,directiveValue="schemas['"+ns+"']",directiveElm=jQuery('<div jerv-design-js-value-editor-field="" schemadata="'+directiveValue+'" rootNamespace="'+rootNamespace+'">'+directiveName+"</div>"),directiveElm.attr("class","row"),displayElm.append(directiveElm));$compile(displayElm)($scope)};buildSchema(schemaData),events.on("updateSchema","JervDesignJsValueEditor",buildSchema)}return{link:link,scope:{valueData:"="},templateUrl:JervDesignJsValueEditorService.libPath+"standard-display.html"}}]),angular.module("JervDesignJsValueEditor").directive("jervDesignJsValueEditorField",["JervDesignJsValueEditorService",function(JervDesignJsValueEditorService){function link($scope,element,attrs){$scope.save=function(){try{var value=JSON.parse($scope.schemadata.displayValue)}catch(err){return void alert("Invalid JSON")}JervDesignJsValueEditorService.updateDataSchema($scope.schemadata.name,value)},$scope.delete=function(){JervDesignJsValueEditorService.deleteDataSchema($scope.schemadata.name)}}return{link:link,scope:{schemadata:"="},templateUrl:JervDesignJsValueEditorService.libPath+"field.html"}}]),angular.module("JervDesignJsValueEditor").directive("jervDesignJsValueEditorFieldBoolean",["JervDesignJsValueEditorService",function(JervDesignJsValueEditorService){function link($scope,element,attrs){}return{link:link,scope:{schemadata:"="},template:'<div class="col-sm-6"> <strong>  <span ng-show="schemadata.title">{{schemadata.title}}</span>   <span ng-hide="schemadata.title">{{schemadata.name}}</span>  </strong> <span>({{schemadata.type}})</span> </div><div class="col-sm-6"> <div>Value: {{schemadata.value | json}}</div></div><div class="col-sm-12"> <input type="checkbox" name="schemadata.name" ng-model="schemadata.value" ng-value="true"></div>'}}]),angular.module("JervDesignJsValueEditor").directive("jervDesignJsValueEditorFieldLiteral",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){function link($scope,element,attrs){$scope.onChange=function(){}}return{link:link,scope:{schemadata:"="},template:'<div class="col-sm-6"> <strong>  <span ng-show="schemadata.title">{{schemadata.title}}</span>   <span ng-hide="schemadata.title">{{schemadata.name}}</span>  </strong> <span>({{schemadata.type}})</span> </div><div class="col-sm-6"> <div>Value: {{schemadata.value | json}}</div></div><div class="col-sm-12"> <input ng-change="onChange()" ng-model="schemadata.value" type="text"/></div>'}}]),angular.module("JervDesignJsValueEditor").directive("jervDesignJsValueEditorFieldNumber",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){function link($scope,element,attrs){$scope.onChange=function(){$scope.schemadata.value=Number($scope.schemadata.value)}}return{link:link,scope:{schemadata:"="},template:'<div class="col-sm-6"> <strong>  <span ng-show="schemadata.title">{{schemadata.title}}</span>   <span ng-hide="schemadata.title">{{schemadata.name}}</span>  </strong> <span>({{schemadata.type}})</span> </div><div class="col-sm-6"> <div>Value: {{schemadata.value | json}}</div></div><div class="col-sm-12"> <input ng-change="onChange()" ng-model="schemadata.value" type="text"/></div>'}}]),angular.module("JervDesignJsValueEditor").directive("jervDesignJsValueEditorFieldString",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){function link($scope,element,attrs){$scope.onChange=function(){$scope.schemadata.value=""+$scope.schemadata.value}}return{link:link,scope:{schemadata:"="},template:'<div class="col-sm-6"> <strong>  <span ng-show="schemadata.title">{{schemadata.title}}</span>   <span ng-hide="schemadata.title">{{schemadata.name}}</span>  </strong> <span>({{schemadata.type}})</span> </div><div class="col-sm-6"> <div>Value: {{schemadata.value | json}}</div></div><div class="col-sm-12"> <input ng-change="onChange()" ng-model="schemadata.value" type="text"/></div>'}}]);
//# sourceMappingURL=jervdesign-js-value-editor.min.js.map