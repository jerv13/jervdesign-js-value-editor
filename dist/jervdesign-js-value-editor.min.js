/*! jervdesign-js-value-editor 2016-07-13 */

angular.module("JervDesignJsValueEditor",[]);var JervDesignJsValueEditorConfig={schemaConfig:{"field.name":{type:"literal",title:"Field",required:!0,filterValidate:null}},types:{literal:"JervDesignJsValueEditorDataTypeLiteral",string:"JervDesignJsValueEditorDataTypeString",null:"JervDesignJsValueEditorDataTypeNull",number:"JervDesignJsValueEditorDataTypeNumber",object:"JervDesignJsValueEditorDataTypeObject",array:"JervDesignJsValueEditorDataTypeArray",boolean:"JervDesignJsValueEditorDataTypeBoolean"},"type-changer":{description:"Handles changing types",directive:"jervdesign-js-value-editor-type-changer"},distPath:"/vendor/jervdesign-js-value-editor/dist/"};angular.module("JervDesignJsValueEditor").run(["JervDesignJsValueEditorService","JervDesignJsValueEditorDataTypeString","JervDesignJsValueEditorDataTypeNull","JervDesignJsValueEditorDataTypeNumber","JervDesignJsValueEditorDataTypeObject","JervDesignJsValueEditorDataTypeArray","JervDesignJsValueEditorDataTypeBoolean",function(JervDesignJsValueEditorService,JervDesignJsValueEditorDataTypeString,JervDesignJsValueEditorDataTypeNull,JervDesignJsValueEditorDataTypeNumber,JervDesignJsValueEditorDataTypeObject,JervDesignJsValueEditorDataTypeArray,JervDesignJsValueEditorDataTypeBoolean){JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeString),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeNull),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeNumber),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeObject),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeArray),JervDesignJsValueEditorService.setTypeService(JervDesignJsValueEditorDataTypeBoolean)}]);var JervDesignJsValueEditorEvents=function(){var self=this,listeners={},promises={};self.on=function(event,listenerId,method){listeners[event]||(listeners[event]={}),listeners[event][listenerId]=method,honorPromise(event,method)},self.trigger=function(event,args){if(listeners[event]){var listenerList=listeners[event];for(var key in listenerList)if(listenerList.hasOwnProperty(key)){var value=listenerList[key];"function"==typeof value&&value(args)}}makePromise(event,args)};var makePromise=function(event,args){promises[event]=args},honorPromise=function(event,method){"undefined"!=typeof promises[event]&&method(promises[event])}};angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorEvents",function(){return new JervDesignJsValueEditorEvents});var JervDesignJsValueEditorDataSchema=function(){var self=this;self.type="null",self.originalType="null",self.name="",self.parentName="",self.accessor="",self.value=null,self.originalValue=null,self.displayValue="",self.originalDisplayValue="",self.getParentName=function(){return self.parentName?self.parentName:self.name},self.filterValidate=function(){return new JervDesignJsValueEditorFilterValidateResult}};angular.module("JervDesignJsValueEditor").factory("JervDesignJsValueEditorDataSchema",[function(){return JervDesignJsValueEditorDataSchema}]);var JervDesignJsValueEditorFilterDataType=function(){var dataType=this;dataType.type="DEFAULT",dataType.description="DEFAULT",dataType.canCreateValue=!1,dataType.canUpdateValue=!1,dataType.canDeleteValue=!1,dataType.rebuildOnChange=!1,dataType.buildSchemaValues=function(name,value,accessor,schemas){},dataType.createValue=function(key,subValue,schemaValue){},dataType.updateValue=function(key,subValue,schemaValue){},dataType.deleteValue=function(key,schemaValue){},dataType.filterValidate=function(name,value){return new JervDesignJsValueEditorFilterValidateResult}};angular.module("JervDesignJsValueEditor").factory("JervDesignJsValueEditorFilterDataType",[function(){return JervDesignJsValueEditorFilterDataType}]);var JervDesignJsValueEditorFilterValidateResult=function(){var self=this;self.message="OK",self.isValid=!0};angular.module("JervDesignJsValueEditor").factory("JervDesignJsValueEditorFilterValidateResult",function(){return JervDesignJsValueEditorFilterValidateResult}),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeArray",["JervDesignJsValueEditorFilterDataType","JervDesignJsValueEditorService",function(JervDesignJsValueEditorFilterDataType,JervDesignJsValueEditorService){var dataType=new JervDesignJsValueEditorFilterDataType;return dataType.type="array",dataType.description="Handles array",dataType.canCreateValue=!0,dataType.canUpdateValue=!0,dataType.canDeleteValue=!0,dataType.rebuildOnChange=!0,dataType.buildSchemaValues=function(name,value,accessor,schemas){for(var childName,childAccessor,i=0;i<value.length;i++)childName=name+"."+i,childAccessor=accessor+"["+i+"]",JervDesignJsValueEditorService.buildDataSchema(childName,value[i],childAccessor,schemas),schemas[childName].parentName=name},dataType.createValue=function(key,subValue,schemaValue){return key?(key=Number(key),void(schemaValue[key]=subValue)):void schemaValue.push(subValue)},dataType.updateValue=function(key,subValue,schemaValue){key=Number(key),schemaValue[key]=subValue},dataType.deleteValue=function(key,schemaValue){schemaValue.splice(key,1)},dataType}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeBoolean",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var dataType=new JervDesignJsValueEditorFilterDataType;return dataType.type="boolean",dataType.description="Handles booleans",dataType}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeNull",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var dataType=new JervDesignJsValueEditorFilterDataType;return dataType.type="null",dataType.description="Handles nulls",dataType}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeNumber",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var dataType=new JervDesignJsValueEditorFilterDataType;return dataType.type="number",dataType.description="Handles numbers",dataType}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeObject",["JervDesignJsValueEditorFilterDataType","JervDesignJsValueEditorService",function(JervDesignJsValueEditorFilterDataType,JervDesignJsValueEditorService){var dataType=new JervDesignJsValueEditorFilterDataType;return dataType.type="object",dataType.description="Handles objects",dataType.canCreateValue=!0,dataType.canUpdateValue=!0,dataType.canDeleteValue=!0,dataType.rebuildOnChange=!0,dataType.buildSchemaValues=function(name,value,accessor,schemas){var childName,childAccessor;for(var prop in value)childName=name+"."+prop,childAccessor=accessor+'["'+prop+'"]',JervDesignJsValueEditorService.buildDataSchema(childName,value[prop],childAccessor,schemas),schemas[childName].parentName=name},dataType.createValue=function(key,subValue,schemaValue){schemaValue[key]=subValue},dataType.updateValue=function(key,subValue,schemaValue){schemaValue[key]=subValue},dataType.deleteValue=function(key,schemaValue){delete schemaValue[key]},dataType}]),angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorDataTypeString",["JervDesignJsValueEditorFilterDataType",function(JervDesignJsValueEditorFilterDataType){var dataType=new JervDesignJsValueEditorFilterDataType;return dataType.type="string",dataType.description="Handles strings and nulls",dataType}]);var JervDesignJsValueEditorService=function(JervDesignJsValueEditorEvents,JervDesignJsValueEditorDataSchema){var self=this,typeServices={};self.libPath="/bower_components/jervdesign-js-value-editor/dist/",self.schemas={},self.loading=[],self.getEvents=function(){return JervDesignJsValueEditorEvents},self.setLoading=function(name,loading){var index=self.loading.indexOf(name),isNameLoading=index>-1;loading&&!isNameLoading&&self.loading.push(name),!loading&&isNameLoading&&self.loading.splice(index,1);var anyLoading=self.loading.length>0;return JervDesignJsValueEditorEvents.trigger("loading",anyLoading),anyLoading},self.setTypeService=function(dataType){typeServices[dataType.type]&&console.warn("Duplicate type set for "+dataType.type),typeServices[dataType.type]=dataType},self.getTypeService=function(type){if(!typeServices[type])throw"Type not found:"+type;return typeServices[type]},self.getType=function(name,value){var type=self.typeOf(value);return typeServices[type]?type:(console.warn("Type "+type+" service not available"),"string")},self.typeOf=function(value){return null===value?"null":void 0===value?"null":Array.isArray(value)?"array":typeof value},self.save=function(schemasName){var data=self.schemas[schemasName].data;JervDesignJsValueEditorEvents.trigger("save:"+schemasName,data)},self.getKey=function(ns){var nsParts=ns.split("."),last=nsParts.length-1;return nsParts[last]},self.getSchemaName=function(ns){var nsParts=ns.split(".");return nsParts[0]},self.createValue=function(parentNs,key,value){var schemasName=self.getSchemaName(parentNs),parentSchema=self.getSchema(parentNs),parentSchemaValue=null;eval("parentSchemaValue = self.schemas."+schemasName+".data"+parentSchema.accessor),typeServices[parentSchema.type].createValue(key,value,parentSchemaValue),typeServices[parentSchema.type].rebuildOnChange&&self.refreshDataSchema(schemasName)},self.updateValue=function(ns,value){var schemasName=self.getSchemaName(ns),schema=self.getSchema(ns),parentSchema=self.getSchema(schema.getParentName()),key=self.getKey(ns),parentSchemaValue=null;eval("parentSchemaValue = self.schemas."+schemasName+".data"+parentSchema.accessor),typeServices[parentSchema.type].updateValue(key,value,parentSchemaValue),typeServices[parentSchema.type].rebuildOnChange&&self.refreshDataSchema(schemasName)},self.deleteValue=function(ns){var schemasName=self.getSchemaName(ns),schema=self.getSchema(ns),parentSchema=self.getSchema(schema.getParentName()),key=self.getKey(ns),parentSchemaValue=null;eval("parentSchemaValue = self.schemas."+schemasName+".data"+parentSchema.accessor),typeServices[parentSchema.type].deleteValue(key,parentSchemaValue),delete self.schemas[schemasName].schema[ns],typeServices[parentSchema.type].rebuildOnChange&&self.refreshDataSchema(schemasName)},self.getDataSchema=function(ns){return self.schemas[self.getSchemaName(ns)]},self.getSchema=function(ns){var dataSchema=self.getDataSchema(ns);return dataSchema.schema[ns]},self.refreshDataSchema=function(schemaName){self.schemas[schemaName].schema={},self.buildDataSchema(schemaName,self.schemas[schemaName].data,"",self.schemas[schemaName].schema),JervDesignJsValueEditorEvents.trigger("updateSchema",self.schemas[schemaName])},self.newDataSchema=function(schemaName,data){return self.schemas[schemaName]={},self.schemas[schemaName].data=data,self.schemas[schemaName].schema=self.buildDataSchema(schemaName,data,"",{}),JervDesignJsValueEditorEvents.trigger("newSchema",self.schemas[schemaName]),self.schemas[schemaName]},self.buildDataSchema=function(name,value,accessor,schemas){self.setLoading(name,!0),schemas||(schemas={}),accessor||(accessor=""),name||(name="");var type=self.getType(name,value),schema=new JervDesignJsValueEditorDataSchema;return schema.type=type,schema.originalType=type,schema.name=name,schema.accessor=accessor,schema.value=value,schema.originalValue=value,schema.displayValue=JSON.stringify(value),schema.originalDisplayValue=JSON.stringify(value),schema.dataType=typeServices[type],schemas[name]=schema,typeServices[type].buildSchemaValues(name,value,accessor,schemas),self.setLoading(name,!1),schemas},self.filterValidate=function(schema){var type=self.getType(name,value);return typeServices[type].filterValidate(name,value)}};angular.module("JervDesignJsValueEditor").service("JervDesignJsValueEditorService",["JervDesignJsValueEditorEvents","JervDesignJsValueEditorDataSchema",function(JervDesignJsValueEditorEvents,JervDesignJsValueEditorDataSchema){return new JervDesignJsValueEditorService(JervDesignJsValueEditorEvents,JervDesignJsValueEditorDataSchema)}]),angular.module("JervDesignJsValueEditor").filter("JervDesignJsValueEditorLimitLength",function(){return function(input,length){input=""+input;var result=input.substring(0,length);return result.length!==input.length&&(result+=" ..."),result}}),angular.module("JervDesignJsValueEditor").filter("JervDesignJsValueEditorNsFormatFilter",function(){return function(ns){ns=""+ns;var nsParts=ns.split("."),count=nsParts.length,last=count-1,spaceCnt=count,spaces=Array(spaceCnt).join(" -");return spaces+" "+nsParts[last]}}),angular.module("JervDesignJsValueEditor").directive("jervDesignJsValueEditorStandardDisplay",["$timeout","$compile","JervDesignJsValueEditorService",function($timeout,$compile,JervDesignJsValueEditorService){function link($scope,element,attrs){var events=JervDesignJsValueEditorService.getEvents();$scope.loading=JervDesignJsValueEditorService.loading,$scope.showedit={},$scope.searchValue="";var loading=function(loading){$scope.loading=loading};$scope.rootNamespace||($scope.rootNamespace="root"),$scope.valueData||console.error("value-data attribute missing or empty");var schemaData=JervDesignJsValueEditorService.newDataSchema($scope.rootNamespace,$scope.valueData),buildSchema=function(schemaData){$scope.schemas=schemaData.schema};$scope.save=function(){JervDesignJsValueEditorService.save($scope.rootNamespace)},$scope.search=function(){var ns;if($scope.searchValue){var regex=new RegExp($scope.searchValue,"i");for(ns in $scope.schemas)$scope.schemas[ns].searchHide=!regex.test(ns)}else for(ns in $scope.schemas)$scope.schemas[ns].searchHide=!1},$scope.refresh=function(){JervDesignJsValueEditorService.refreshDataSchema($scope.rootNamespace)},$scope.save=function(){JervDesignJsValueEditorService.save($scope.rootNamespace)},buildSchema(schemaData),events.on("loading","JervDesignJsValueEditor",loading),events.on("updateSchema","JervDesignJsValueEditor",buildSchema)}return{link:link,scope:{valueData:"=",rootNamespace:"="},templateUrl:JervDesignJsValueEditorService.libPath+"standard-display.html"}}]),angular.module("JervDesignJsValueEditor").directive("jervDesignJsValueEditorField",["JervDesignJsValueEditorService",function(JervDesignJsValueEditorService){function link($scope,element,attrs){if($scope.typeChanged=!1,!$scope.rootNamespace)throw console.error("root-namespace attribute missing or empty");$scope.isRoot=$scope.rootNamespace===$scope.schemadata.name,$scope.createData={key:"",displayValue:""},$scope.onRawChange=function(){$scope.typeChanged=$scope.schemadata.originalDisplayValue!==$scope.schemadata.displayValue};var onUpdate=function(){$scope.showedit=!1};$scope.cancel=function(){$scope.schemadata.displayValue=$scope.schemadata.originalDisplayValue,$scope.schemadata.value=$scope.schemadata.originalValue,$scope.schemadata.type=$scope.schemadata.originalType,onUpdate()},$scope.create=function(){try{var value=JSON.parse($scope.createData.displayValue)}catch(err){return void alert("Invalid JSON")}JervDesignJsValueEditorService.createValue($scope.schemadata.name,$scope.createData.key,value),onUpdate()},$scope.save=function(){try{var value=JSON.parse($scope.schemadata.displayValue)}catch(err){return void alert("Invalid JSON")}JervDesignJsValueEditorService.updateValue($scope.schemadata.name,value),onUpdate()},$scope.delete=function(){JervDesignJsValueEditorService.deleteValue($scope.schemadata.name),onUpdate()}}return{link:link,scope:{rootNamespace:"=",schemadata:"=",showedit:"="},templateUrl:JervDesignJsValueEditorService.libPath+"field.html"}}]);
//# sourceMappingURL=jervdesign-js-value-editor.min.js.map